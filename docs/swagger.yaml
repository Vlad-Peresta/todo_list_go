basePath: /api/v1
definitions:
  schemas.AuthInputData:
    properties:
      password:
        type: string
      username:
        type: string
    required:
    - password
    - username
    type: object
  schemas.Response:
    properties:
      data: {}
      message:
        type: string
      status:
        type: string
    type: object
  schemas.TagRequest:
    properties:
      name:
        type: string
    type: object
  schemas.TodoRequest:
    properties:
      active:
        type: boolean
      deadline:
        type: string
      description:
        type: string
      name:
        type: string
      status_id:
        type: integer
      user_id:
        description: Tags        []uint  `json:"tags"`
        type: integer
    type: object
host: localhost:8080
info:
  contact:
    email: perestavlad@gmail.com
    name: Vladyslav Peresta
    url: https://github.com/Vlad-Peresta
  description: API for working with the Todo List.
  title: Todo List API
  version: 1.0.0
paths:
  /auth/login:
    post:
      description: Login User
      parameters:
      - description: Authentication Data
        in: body
        name: Body
        required: true
        schema:
          $ref: '#/definitions/schemas.AuthInputData'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/schemas.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/schemas.Response'
      summary: Login User
      tags:
      - auth
  /auth/signup:
    post:
      description: Create User record
      parameters:
      - description: Authentication Data
        in: body
        name: Body
        required: true
        schema:
          $ref: '#/definitions/schemas.AuthInputData'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/schemas.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/schemas.Response'
      summary: Create User record
      tags:
      - auth
  /auth/user/profile:
    get:
      description: Get user profile
      parameters:
      - default: Bearer <Access token>
        description: Insert your access token
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/schemas.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/schemas.Response'
      summary: Get user profile
      tags:
      - auth
  /tags:
    get:
      description: Get all Tag records
      parameters:
      - default: Bearer <Access token>
        description: Insert your access token
        in: header
        name: Authorization
        required: true
        type: string
      - default: id DESC
        description: Sorting parameter
        in: query
        name: sort
        type: string
      - default: "100"
        description: Records per page
        in: query
        name: limit
        type: string
      - default: "1"
        description: Current page
        in: query
        name: page
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/schemas.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/schemas.Response'
      summary: Get all Tag records
      tags:
      - tags
    post:
      description: Create Tag record
      parameters:
      - default: Bearer <Access token>
        description: Insert your access token
        in: header
        name: Authorization
        required: true
        type: string
      - description: Request Body
        in: body
        name: Body
        required: true
        schema:
          $ref: '#/definitions/schemas.TagRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/schemas.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/schemas.Response'
      summary: Create Tag record
      tags:
      - tags
  /tags/{id}:
    delete:
      description: Delete Tag record
      parameters:
      - default: Bearer <Access token>
        description: Insert your access token
        in: header
        name: Authorization
        required: true
        type: string
      - description: Tag ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/schemas.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/schemas.Response'
      summary: Delete Tag record
      tags:
      - tags
    get:
      description: Get Tag record by ID
      parameters:
      - default: Bearer <Access token>
        description: Insert your access token
        in: header
        name: Authorization
        required: true
        type: string
      - description: Tag ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/schemas.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/schemas.Response'
      summary: Get Tag record by ID
      tags:
      - tags
    put:
      description: Update Tag record
      parameters:
      - default: Bearer <Access token>
        description: Insert your access token
        in: header
        name: Authorization
        required: true
        type: string
      - description: Tag ID
        in: path
        name: id
        required: true
        type: integer
      - description: Request Body
        in: body
        name: Body
        required: true
        schema:
          $ref: '#/definitions/schemas.TagRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/schemas.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/schemas.Response'
      summary: Update Tag record
      tags:
      - tags
  /todos:
    get:
      description: Get all Todo records
      parameters:
      - default: Bearer <Access token>
        description: Insert your access token
        in: header
        name: Authorization
        required: true
        type: string
      - default: id DESC
        description: Sorting parameter
        in: query
        name: sort
        type: string
      - default: "100"
        description: Records per page
        in: query
        name: limit
        type: string
      - default: "1"
        description: Current page
        in: query
        name: page
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/schemas.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/schemas.Response'
      summary: Get all Todo records
      tags:
      - todos
    post:
      description: Create Todo record
      parameters:
      - default: Bearer <Access token>
        description: Insert your access token
        in: header
        name: Authorization
        required: true
        type: string
      - description: Request Body
        in: body
        name: Body
        required: true
        schema:
          $ref: '#/definitions/schemas.TodoRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/schemas.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/schemas.Response'
      summary: Create Todo record
      tags:
      - todos
  /todos/{id}:
    delete:
      description: Delete Todo record
      parameters:
      - default: Bearer <Access token>
        description: Insert your access token
        in: header
        name: Authorization
        required: true
        type: string
      - description: Todo ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/schemas.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/schemas.Response'
      summary: Delete Todo record
      tags:
      - todos
    get:
      description: Get Todo record by ID
      parameters:
      - default: Bearer <Access token>
        description: Insert your access token
        in: header
        name: Authorization
        required: true
        type: string
      - description: Todo ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/schemas.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/schemas.Response'
      summary: Get Todo record by ID
      tags:
      - todos
    put:
      description: Update Todo record
      parameters:
      - default: Bearer <Access token>
        description: Insert your access token
        in: header
        name: Authorization
        required: true
        type: string
      - description: Todo ID
        in: path
        name: id
        required: true
        type: integer
      - description: Request Body
        in: body
        name: Body
        required: true
        schema:
          $ref: '#/definitions/schemas.TodoRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/schemas.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/schemas.Response'
      summary: Update Todo record
      tags:
      - todos
swagger: "2.0"
